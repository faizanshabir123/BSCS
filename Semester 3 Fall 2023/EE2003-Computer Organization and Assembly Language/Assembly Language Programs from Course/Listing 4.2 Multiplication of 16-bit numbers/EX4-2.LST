     1                                  ; 16bit multiplication
     2                                  [org 0x0100]
     3                                  
     4 00000000 E90A00                  jmp start
     5 00000003 14050000                multiplicand: dd 1300 ; 16bit multiplicand 32bit space
     6 00000007 F401                    multiplier: dw 500 ; 16bit multiplier
     7 00000009 00000000                result: dd 0 ; 32bit result
     8 0000000D B110                    start: mov cl, 16 ; initialize bit count to 16
     9 0000000F 8B16[0700]              mov dx, [multiplier] ; load multiplier in dx
    10 00000013 D1EA                    checkbit: shr dx, 1 ; move right most bit in carry
    11 00000015 730E                    jnc skip ; skip addition if bit is zero
    12 00000017 A1[0300]                mov ax, [multiplicand]
    13 0000001A 0106[0900]              add [result], ax ; add less significant word
    14 0000001E A1[0500]                mov ax, [multiplicand+2]
    15 00000021 1106[0B00]              adc [result+2], ax ; add more significant word
    16 00000025 D126[0300]              skip: shl word [multiplicand], 1
    17 00000029 D116[0500]              rcl word [multiplicand+2], 1 ; shift multiplicand left
    18 0000002D FEC9                    dec cl ; decrement bit count
    19 0000002F 75E2                    jnz checkbit ; repeat if bits left
    20                                  
    21 00000031 B8004C                  mov ax, 0x4c00 ; terminate program
    22 00000034 CD21                    int 0x21
