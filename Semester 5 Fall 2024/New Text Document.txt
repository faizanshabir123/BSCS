import socket
import threading

# Function to handle client connections
def handle_client(client_socket, client_address):
    print(f"New connection from {client_address}")
    try:
        while True:
            # Receiving data from the client
            data = client_socket.recv(1024)
            if not data:
                break
            print(f"Received from {client_address}: {data.decode()}")
            # Echo the data back to the client
            client_socket.sendall(data)
    except ConnectionResetError:
        print(f"Connection lost with {client_address}")
    finally:
        # Close the connection
        client_socket.close()
        print(f"Connection closed for {client_address}")

# Main server function
def start_server(host='0.0.0.0', port=12345):
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(5)  # Listen for up to 5 connections
    print(f"Server listening on {host}:{port}")

    while True:
        # Accept a new client connection
        client_socket, client_address = server_socket.accept()
        # Create a new thread for each client
        client_thread = threading.Thread(target=handle_client, args=(client_socket, client_address))
        client_thread.start()

if __name__ == "__main__":
    start_server()
